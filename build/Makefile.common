S = $(abspath  ..)

OPTS= -no-alias-deps -bin-annot -strict-sequence -safe-string -short-paths -strict-formats -w +A@8-4-6-30-40..42-48-44-45 -I lib -I full -I lib/sexp -I bundled -I tests

DEPS= compiler-libs
PKGS= -I +compiler-libs

LKS = unix.cmxa threads.cmxa ocamlcommon.cmxa

define sorted_deps
  echo "$(1)SORT = `cd $S && $(DEPGEN) -package compiler-libs.common -package unix -package threads $(SRCI) $(IMPL) $(addprefix build/, $(GENS)) -ancestors-of $(1).ml -sort`" | sed -e 's/build\///g' > $(1).sort
endef

IDEPS=$(shell ocamlfind query $(DEPS))

OCAMLOPT= ocamlopt -thread  $(PKGS) $(OPTS)
OCAMLC= ocamlc -thread $(PKGS) $(OPTS)
DEPGEN=codept -no-alias-deps
MAINS= full/codept_server.ml full/codept_client.ml full/codept.ml \
       tests/run.ml tests/serialization.ml

OMAINS=$(addprefix $S/,$(MAINS))

.SUFFIXES: .ml .mli .cmo .cmi .cmx

OSRC= $S/bundled/bundle.mli $(wildcard $S/lib/*.mli) $(wildcard $S/full/*.mli)
OSRCI= $(wildcard $S/tests/*.ml) \
       $(addprefix $S/full/codept, .ml _server.ml _client.ml)
OIMPL = $(OSRC:.mli=.ml)

SRC=$(patsubst $S/%,%, $(OSRC))
SRCI=$(patsubst $S/%,%, $(OSRCI))
IMPL=$(patsubst $S/%,%, $(OIMPL))

SRCA= $(SRC) $(SRCI)

SRCO = $(basename $(SRCA))
OBJ=$(SRCO:%=%.cmx)

SRCOS = $(basename $(DSORT))
OBJS= $(SRCOS:%=%.cmx)
BOBJS=$(patsubst $S/%,%,$(OBJS))

GENS=$(addprefix lib/, slex.ml sparser.mli)
BGENS = $(basename $(GENS))

LIB = $(wildcard $S/lib/*.mli)
LIBDOC = $(LIB:%.mli=%.odoc)
ODOC = $(patsubst $S/lib/%,docs/%, $(LIBDOC))

define tocmx
        $(addsuffix .cmx, $(basename $(1)))
endef
